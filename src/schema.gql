# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Comment Author"""
type Author {
  """User id"""
  id: Int!

  """User name"""
  name: String!

  """User profile information"""
  profile: Profile!
}

type CommentsResponse {
  page: NewsCommentConnection!
  pageData: PageData
}

input CreateNewsCategoryInput {
  """News category description"""
  description: String

  """News category name"""
  name: String!
}

input CreateNewsCommentInput {
  """Comment content"""
  content: String!

  """News id"""
  news: Int!
}

input CreateNewsInput {
  """News category"""
  category: Int

  """News content"""
  content: String!

  """News image"""
  images: [Upload!]

  """News Image source"""
  imgSource: String

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean
  singleImage: Upload

  """News source"""
  source: String

  """News Status"""
  state: NewsState

  """News tags"""
  tags: [String!]

  """News title"""
  title: String!
}

input CreateNewsReplyInput {
  """News comment id"""
  comment: Int!

  """Comment content"""
  content: String!

  """User who is replied to by this comment"""
  repliedTo: Int!
}

input CreateNewsTaggitInput {
  """News id"""
  news: Int!

  """Tag id"""
  tag: Int!
}

input CreateNotificationDeviceInput {
  """Notification device platform"""
  platform: String!

  """Notification device token"""
  token: String!
}

input CreatePublicToiletInput {
  """Public Toilet address"""
  address: String!

  """Public Toilet content"""
  content: String!

  """Public Toilet location"""
  geopoint: GeoJSONPointScalar

  """Public Toilet image"""
  images: [Upload!]

  """PublicToilet name"""
  name: String!

  """Public Toilet Feature Image"""
  singleImage: Upload
}

input CreateTagInput {
  """Tag name"""
  name: String!
}

input CreateUserLikesNewsCommentInput {
  """News comment liked by the user"""
  commentId: Int!

  """User reaction to comment"""
  react: UserReacts
}

input CreateUserLikesNewsInput {
  """News liked by the user"""
  newsId: Int!

  """User reaction to news"""
  react: UserReacts
}

input CreateUserLikesNewsReplyInput {
  """User reaction to reply"""
  react: UserReacts

  """News reply liked by the user"""
  replyId: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterNewsInput {
  """News category"""
  category: Int
}

"""GeoJSON Point"""
scalar GeoJSONPointScalar

type Mutation {
  createNews(createNewsInput: CreateNewsInput!): News!
  createNewsCategory(createNewsCategoryInput: CreateNewsCategoryInput!): NewsCategory!
  createNewsComment(createNewsCommentInput: CreateNewsCommentInput!): NewsComment!
  createNewsReply(createNewsReplyInput: CreateNewsReplyInput!): NewsReply!
  createNewsTaggit(createNewsTaggitInput: CreateNewsTaggitInput!): NewsTaggit!
  createNotificationDevice(CreateNotificationDeviceInput: CreateNotificationDeviceInput!): NotificationDevice!
  createPublicToilet(createPublicToiletInput: CreatePublicToiletInput!): PublicToilet!
  createTag(createTagInput: CreateTagInput!): Tag!
  createUserLikesNews(createUserLikesNewsInput: CreateUserLikesNewsInput!): UserLikesNews!
  createUserLikesNewsComment(createUserLikesNewsCommentInput: CreateUserLikesNewsCommentInput!): UserLikesNewsComment!
  createUserLikesNewsReply(createUserLikesNewsReplyInput: CreateUserLikesNewsReplyInput!): UserLikesNewsReply!
  removeNews(id: Int!): News!
  removeNewsCategory(id: Int!): NewsCategory!
  removeNewsComment(id: Int!): NewsComment!
  removeNewsImage(id: Int!): NewsImage!
  removeNewsReply(id: Int!): NewsReply!
  removeNewsTaggit(id: Int!): NewsTaggit!
  removePublicToilet(id: Int!): PublicToilet!
  removeUserLikesNews(newsId: Int!): UserLikesNews!
  removeUserLikesNewsComment(commentId: Int!): UserLikesNewsComment!
  removeUserLikesNewsReply(replyId: Int!): UserLikesNewsReply!
  sendNotification(notificationInput: NotificationInput!): Notification!
  sendNotificationNews(notificationNewsInput: NotificationNewsInput!): Notification!
  updateNews(id: Int!, updateNewsInput: UpdateNewsInput!): News!
  updateNewsCategory(id: Int!, updateNewsCategoryInput: UpdateNewsCategoryInput!): NewsCategory!
  updateNewsComment(id: Int!, updateNewsCommentInput: UpdateNewsCommentInput!): NewsComment!
  updateNewsReply(id: Int!, updateNewsReplyInput: UpdateNewsReplyInput!): NewsReply!
  updatePublicToilet(id: Int!, updatePublicToiletInput: UpdatePublicToiletInput!): PublicToilet!
  updateUserLikesNewsComment(commentId: Int!, updateUserLikesNewsCommentInput: UpdateUserLikesNewsCommentInput!): UserLikesNewsComment!
  updateUserLikesNewsReply(replyId: Int!, updateUserLikesNewsReplyInput: UpdateUserLikesNewsReplyInput!): UserLikesNewsReply!
}

type News {
  """News category"""
  category: NewsCategory
  commentCount: Int!

  """News content"""
  content: String!

  """News createdAt"""
  createdAt: DateTime!

  """News createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """News image"""
  images: [NewsImage!]

  """News Image source"""
  imgSource: String

  """React of user to the news"""
  like: UserLikesNews
  likeCount: Int!

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean!

  """News publishedAt"""
  publishedAt: DateTime

  """News main image."""
  singleImage: String

  """News source"""
  source: String

  """News state"""
  state: NewsState!

  """News tags"""
  tags: [NewsTaggit!]

  """News title"""
  title: String!

  """News updatedAt"""
  updatedAt: DateTime!

  """News updatedBy"""
  updatedBy: Int!
}

type NewsCategory {
  """date of creation"""
  createdAt: DateTime!

  """one who created"""
  createdBy: Int!

  """News category description"""
  description: String

  """id field for int"""
  id: Int!

  """News category name"""
  name: String!

  """News in this category"""
  news: [News!]!

  """date of update"""
  updatedAt: DateTime!

  """one who updated"""
  updatedBy: Int!
}

type NewsComment {
  """one wrote the comment"""
  author: Int!
  authorDetail: Author!

  """Comment content"""
  content: String!

  """date of creation"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Reaction of the user to this comment"""
  like: UserLikesNewsComment
  likeCount: Int!
  reactCounts: ReactCount!

  """Replies to this comment"""
  replies: [NewsReply!]!

  """Number of replies"""
  replyCount: Int!

  """date of update"""
  updatedAt: DateTime!
}

type NewsCommentConnection {
  edges: [NewsCommentEdge!]!
  pageInfo: NewsCommentPageInfo!
}

type NewsCommentEdge {
  cursor: String
  node: NewsComment
}

type NewsCommentPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsConnection {
  edges: [NewsEdge!]!
  pageInfo: NewsPageInfo!
}

type NewsEdge {
  cursor: String
  node: News
}

type NewsImage {
  """News image createdAt"""
  createdAt: DateTime!

  """News image createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """News image"""
  imageURL: String!
  news: News!

  """News image updatedAt"""
  updatedAt: DateTime!

  """News image updatedBy"""
  updatedBy: Int!
}

type NewsPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsReply {
  """one wrote the comment"""
  author: Int!
  authorDetail: Author!

  """Comment content"""
  content: String!

  """date of creation"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Reaction of the user to this comment"""
  like: UserLikesNewsReply
  likeCount: Int!
  reactCounts: ReactCount!

  """User who is replied to"""
  repliedTo: Int!
  repliedToDetail: Author!

  """date of update"""
  updatedAt: DateTime!
}

type NewsReplyConnection {
  edges: [NewsReplyEdge!]!
  pageInfo: NewsReplyPageInfo!
}

type NewsReplyEdge {
  cursor: String
  node: NewsReply
}

type NewsReplyPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsResponse {
  page: NewsConnection!
  pageData: PageData
}

enum NewsState {
  DRAFT
  PUBLISHED
  REVIWED
}

type NewsTaggit {
  """id field for int"""
  id: Int!

  """news name"""
  news: News!

  """Tag name"""
  tag: Tag!
}

type Notification {
  """Notification body"""
  body: String!

  """Created at"""
  createdAt: DateTime!

  """Notification data"""
  data: String

  """id field for int"""
  id: Int!

  """Notification image"""
  image: String

  """Notification title"""
  title: String!
}

type NotificationDevice {
  """Created at"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Notification device platform"""
  platform: String!

  """Notification device token"""
  token: String!
}

input NotificationInput {
  """Notification body"""
  body: String!

  """Notification data"""
  data: String

  """Notification image"""
  image: String

  """Notification title"""
  title: String!
}

input NotificationNewsInput {
  """News Id"""
  newsId: Float!
}

type PageData {
  """total number of objects"""
  count: Float!

  """current date time"""
  curTime: DateTime!
  limit: Float!
  offset: Float!
}

"""Profile of the user"""
type Profile {
  """User Blood Group"""
  bloodGroup: String

  """Profile id"""
  id: Int!

  """Url of the profile picture"""
  image: String
}

type PublicToilet {
  """Public Toilet Address"""
  address: String!

  """Public Toilet content"""
  content: String!

  """Public Toilet createdAt"""
  createdAt: DateTime!

  """Public Toilet createdBy"""
  createdBy: Int!

  """Public Toilet Location"""
  geopoint: GeoJSONPointScalar!

  """id field for int"""
  id: Int!

  """Public Toilet image"""
  images: [PublicToiletImage!]

  """Public Toilet name"""
  name: String!

  """Public Toilet publishedAt"""
  publishedAt: DateTime

  """Public Toilet main image."""
  singleImage: String

  """Public Toilet updatedAt"""
  updatedAt: DateTime!

  """Public Toilet updatedBy"""
  updatedBy: Int!
}

type PublicToiletConnection {
  edges: [PublicToiletEdge!]!
  pageInfo: PublicToiletPageInfo!
}

type PublicToiletEdge {
  cursor: String
  node: PublicToilet
}

type PublicToiletImage {
  """News image createdAt"""
  createdAt: DateTime!

  """News image createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """Public Toilet image"""
  image: String!
  publicToilet: PublicToilet!

  """News image updatedAt"""
  updatedAt: DateTime!

  """News image updatedBy"""
  updatedBy: Int!
}

type PublicToiletPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PublicToiletResponse {
  page: PublicToiletConnection!
  pageData: PageData
}

type Query {
  news(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterNewsInput: FilterNewsInput

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): NewsResponse!
  newsAdmin(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterNewsInput: FilterNewsInput

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): NewsResponse!
  newsById(id: Int!): News!
  newsCategories: [NewsCategory!]!
  newsCategoryById(id: Int!): NewsCategory!
  newsComment(id: Int!): NewsComment!
  newsComments(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    newsId: Int!
  ): CommentsResponse!
  newsReplies(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    newsCommentId: Int!
  ): RepliesResponse!
  newsTaggit: [NewsTaggit!]!
  publicToiletById(id: Int!): PublicToilet!
  publicToiletNearMe(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    origin: GeoJSONPointScalar!
  ): PublicToiletResponse!
  publicToilets(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): PublicToiletResponse!
  tags: [Tag!]!
}

type ReactCount {
  """Number of angry reacts"""
  angry: Int!

  """Number of hahas reacts"""
  haha: Int!

  """Number of love reacts"""
  love: Int!

  """Number of sad reacts"""
  sad: Int!

  """Number of wow reacts"""
  wow: Int!
}

type RepliesResponse {
  page: NewsReplyConnection!
  pageData: PageData
}

type Tag {
  """id field for int"""
  id: Int!

  """name of the tag"""
  name: String!
}

input UpdateNewsCategoryInput {
  """News category description"""
  description: String

  """News category name"""
  name: String
}

input UpdateNewsCommentInput {
  """Comment content"""
  content: String!
}

input UpdateNewsInput {
  """News category"""
  category: Int

  """News content"""
  content: String

  """News image"""
  images: [Upload!]

  """News Image source"""
  imgSource: String

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean
  singleImage: Upload

  """News source"""
  source: String

  """News Status"""
  state: NewsState

  """News tags"""
  tags: [String!]

  """News title"""
  title: String
}

input UpdateNewsReplyInput {
  """Comment content"""
  content: String!
}

input UpdatePublicToiletInput {
  """Public Toilet address"""
  address: String

  """Public Toilet content"""
  content: String

  """Public Toilet location"""
  geopoint: GeoJSONPointScalar

  """Public Toilet image"""
  images: [Upload!]

  """PublicToilet name"""
  name: String

  """Public Toilet Feature Image"""
  singleImage: Upload
}

input UpdateUserLikesNewsCommentInput {
  """User reaction to comment"""
  react: UserReacts
}

input UpdateUserLikesNewsReplyInput {
  """User reaction to reply"""
  react: UserReacts
}

"""Upload files"""
scalar Upload

type UserLikesNews {
  """likes for the news"""
  news: News!

  """id field for int"""
  userId: Int!
}

type UserLikesNewsComment {
  """User reacts"""
  react: UserReacts!

  """id field for int"""
  userId: Int!
}

type UserLikesNewsReply {
  """User reacts"""
  react: UserReacts!

  """id field for int"""
  userId: Int!
}

enum UserReacts {
  ANGRY
  HAHA
  LOVE
  SAD
  WOW
}