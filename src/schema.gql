# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Acceptors of blood request"""
type Acceptors {
  """User address information"""
  address: UserAddress

  """User email"""
  email: String
  first_name: String

  """User id"""
  id: Int!
  last_name: String

  """User name"""
  name: String

  """User profile information"""
  profile: Profile

  """Username"""
  username: String!
}

"""Comment Author"""
type Author {
  """User address information"""
  address: UserAddress

  """User email"""
  email: String
  first_name: String

  """User id"""
  id: Int!
  last_name: String

  """User name"""
  name: String

  """User profile information"""
  profile: Profile

  """Username"""
  username: String!
}

type BaseDistrict {
  """id field for int"""
  id: Int!

  """District Name"""
  name: String!

  """Districts Province"""
  province: BaseProvince
}

type BaseProvince {
  """Province Districts"""
  districts: [BaseDistrict!]!

  """id field for int"""
  id: Int!

  """Province name"""
  name: String!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type BloodBankDonerListResponse {
  count: Int!
  data: [Author!]!
}

enum BloodGroup {
  """AB-"""
  AB_NEG

  """AB+"""
  AB_POS

  """A-"""
  A_NEG

  """A+"""
  A_POS

  """B-"""
  B_NEG

  """B+"""
  B_POS

  """Don't Know"""
  DONT_KNOW

  """O-"""
  O_NEG

  """O+"""
  O_POS
}

type BloodRecordResponse {
  totalDonation: Float!
  totalRequest: Float!
}

type BloodRequest {
  acceptors: [Int!]
  address: BloodRequestAddress!

  """amount needed in this blood request"""
  amount: Float!

  """Type of blood group"""
  bloodGroup: BloodGroup!

  """date of creation"""
  createdAt: DateTime!

  """one who created"""
  createdBy: Int!

  """Further description of the blood request"""
  description: String

  """Donated date"""
  donatedDate: DateTime

  """Donation date"""
  donationDate: DateTime!
  doners: [Int!]

  """id field for int"""
  id: Int!

  """Is the blood request an emergency?"""
  is_emergency: Boolean!

  """Phone number"""
  phoneNumber: BigInt!

  """Profile of the user who created the request"""
  profile: Author

  """Blood request state"""
  state: BloodRequestState!

  """date of update"""
  updatedAt: DateTime!

  """one who updated"""
  updatedBy: Int!
}

type BloodRequestAddress {
  """Address"""
  address: String!

  """District Type"""
  district: BaseDistrict

  """id field for int"""
  id: Int!

  """Province Type"""
  province: BaseProvince
}

type BloodRequestAdminResponse {
  count: Int!
  data: [BloodRequest!]!
}

type BloodRequestConnection {
  edges: [BloodRequestEdge!]!
  pageInfo: BloodRequestPageInfo!
}

type BloodRequestEdge {
  cursor: String
  node: BloodRequest
}

type BloodRequestPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type BloodRequestResponse {
  page: BloodRequestConnection!
  pageData: PageData
}

enum BloodRequestState {
  CANCELLED
  COMPLETE
  DRAFT
  PUBLISHED
  REVIEWED
}

type CommentsResponse {
  page: NewsCommentConnection!
  pageData: PageData
}

input CreateBloodRequestAddressInput {
  """Address"""
  address: String!

  """District Type"""
  district: Int!

  """Province Type"""
  province: Int!
}

input CreateBloodRequestInput {
  acceptors: [Int!]

  """Address for yellow page address"""
  address: CreateBloodRequestAddressInput

  """Amount of blood"""
  amount: Int

  """Blood group type"""
  bloodGroup: BloodGroup!

  """Description for blood request"""
  description: String

  """Donation date"""
  donationDate: DateTime
  doners: [Int!]

  """Is the blood request an emergency?"""
  is_emergency: Boolean = false

  """Phone number"""
  phoneNumber: BigInt

  """Yellow Pages State"""
  state: BloodRequestState
}

input CreateDistrictInput {
  """District name"""
  name: String!

  """Districts Province"""
  province: Int!
}

input CreateNewsCategoryInput {
  """News category description"""
  description: String

  """News category name"""
  name: String!
}

input CreateNewsCommentInput {
  """Comment content"""
  content: String!

  """News id"""
  news: Int!
}

input CreateNewsEngagementInput {
  """News engagement duration"""
  engagementDuration: String!

  """News engagement date"""
  engagmentDate: DateTime!

  """News engaged by the user"""
  newsId: Int!
}

input CreateNewsInput {
  """News category"""
  category: Int

  """News content"""
  content: String!

  """News image"""
  images: [Upload!]

  """News Image source"""
  imgSource: String

  """News Language"""
  language: NewsLanguage!

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean
  singleImage: Upload

  """News source"""
  source: String

  """News Status"""
  state: NewsState

  """News tags"""
  tags: [String!]

  """News title"""
  title: String!
}

input CreateNewsReplyInput {
  """News comment id"""
  comment: Int!

  """Comment content"""
  content: String!

  """User who is replied to by this comment"""
  repliedTo: Int!
}

input CreateNewsTaggitInput {
  """News id"""
  news: Int!

  """Tag id"""
  tag: Int!
}

input CreateNotificationDeviceInput {
  """Notification device platform"""
  platform: String!

  """Notification device token"""
  token: String!

  """Notification device user"""
  userId: Int
}

input CreateProvinceInput {
  name: String!
}

input CreatePublicToiletInput {
  """Public Toilet address"""
  address: String!

  """Public Toilet content"""
  content: String!

  """Public Toilet location"""
  geopoint: GeoJSONPointScalar

  """Public Toilet image"""
  images: [Upload!]

  """PublicToilet name"""
  name: String!

  """Public Toilet Feature Image"""
  singleImage: Upload

  """Public Toilet State"""
  state: State!
}

input CreatePublicToiletReviewInput {
  """Review content"""
  content: String!

  """Public Toilet id"""
  publicToilet: Int!

  """Review rating"""
  rating: Int!
}

input CreateTagInput {
  """Tag name"""
  name: String!
}

input CreateUserInterestsInput {
  """News categories interesting to the user"""
  newsCategories: [Int!]

  """News tags interesting to the user"""
  newsTags: [Int!]
}

input CreateUserLikesNewsCommentInput {
  """News comment liked by the user"""
  commentId: Int!

  """User reaction to comment"""
  react: UserReacts
}

input CreateUserLikesNewsInput {
  """News liked by the user"""
  newsId: Int!

  """User reaction to news"""
  react: UserReacts
}

input CreateUserLikesNewsReplyInput {
  """User reaction to reply"""
  react: UserReacts

  """News reply liked by the user"""
  replyId: Int!
}

input CreateYellowPagesAddressInput {
  """Address"""
  address: String!

  """District Type"""
  district: Int!

  """Province Type"""
  province: Int!

  """Yellow pages id"""
  yellowpages: Int
}

input CreateYellowPagesCategoryInput {
  """Yellow Pages Category description"""
  description: String

  """Yellow Pages name"""
  name: String!
}

input CreateYellowPagesEmailInput {
  """Email"""
  email: EmailAddress!

  """Yellow pages id"""
  yellowpages: Int
}

input CreateYellowPagesInput {
  """Address for yellow page address"""
  address: [CreateYellowPagesAddressInput!]

  """Yellow Pages category"""
  category: Int

  """Yellow Pages description"""
  description: String

  """email for yellow pages"""
  email: [CreateYellowPagesEmailInput!]

  """Yellow Pages name"""
  name: String!

  """Phone number for yellow pages"""
  phone_number: [CreateYellowPagesPhoneNumberInput!]!
  singleImage: Upload

  """Yellow Pages State"""
  state: State
}

input CreateYellowPagesPhoneNumberInput {
  """Emergency number if set to true"""
  is_emergency: Boolean = false

  """Phone number"""
  phone_number: BigInt!

  """Yellow pages id"""
  yellowpages: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type District {
  """id field for int"""
  id: Int!

  """District Name"""
  name: String!

  """Districts Province"""
  province: Province

  """Address for this district"""
  yellowpagesaddress: [YellowPagesAddress!]!
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress @specifiedBy(url: "https://www.w3.org/Protocols/rfc822/")

input FilterBloodRequestInput {
  """Blood group type"""
  bloodGroup: BloodGroup
  filter: Boolean
}

input FilterDistrictInput {
  """Districts Province"""
  province: Int

  """Search query for district"""
  searchQuery: String
}

input FilterNewsInput {
  """News category"""
  category: Int

  """News Language"""
  language: NewsLanguage

  """News title"""
  title: String
}

input FilterYellowPagesInput {
  """Yellow Pages category"""
  category: Int
  district: Int
  is_emergency: Boolean
  province: Int

  """Search query for yellow pages"""
  searchQuery: String
}

"""GeoJSON Point"""
scalar GeoJSONPointScalar

type Mutation {
  acceptBloodRequest(id: Int!): BloodRequest!
  addDoners(id: Int!, usersID: [Int!]!): BloodRequest!
  cancelAcceptedBloodRequest(id: Int!): BloodRequest!
  cancelBloodRequest(id: Int!): BloodRequest!
  completeBloodRequest(id: Int!): BloodRequest!
  creatDistrict(createDistrictInput: CreateDistrictInput!): District!
  createBloodRequest(createBloodBankInput: CreateBloodRequestInput!): BloodRequest!
  createNews(createNewsInput: CreateNewsInput!): News!
  createNewsCategory(createNewsCategoryInput: CreateNewsCategoryInput!): NewsCategory!
  createNewsComment(createNewsCommentInput: CreateNewsCommentInput!): NewsComment!
  createNewsReply(createNewsReplyInput: CreateNewsReplyInput!): NewsReply!
  createNewsTaggit(createNewsTaggitInput: CreateNewsTaggitInput!): NewsTaggit!
  createNotificationDevice(CreateNotificationDeviceInput: CreateNotificationDeviceInput!): NotificationDevice!
  createProvince(createProvinceInput: CreateProvinceInput!): Province!
  createPublicToilet(createPublicToiletInput: CreatePublicToiletInput!): PublicToilet!
  createPublicToiletReview(createPublicToiletReviewsInput: CreatePublicToiletReviewInput!): PublicToiletReview!
  createTag(createTagInput: CreateTagInput!): Tag!
  createUserInterests(createUserInterestsInput: CreateUserInterestsInput!): UserInterests!
  createUserLikesNews(createUserLikesNewsInput: CreateUserLikesNewsInput!): UserLikesNews!
  createUserLikesNewsComment(createUserLikesNewsCommentInput: CreateUserLikesNewsCommentInput!): UserLikesNewsComment!
  createUserLikesNewsReply(createUserLikesNewsReplyInput: CreateUserLikesNewsReplyInput!): UserLikesNewsReply!
  createUserNewsEngagement(createUserNewsEngagementInput: CreateNewsEngagementInput!): UserNewsEngagement!
  createYellowPages(createYellowPagesInput: CreateYellowPagesInput!): YellowPages!
  createYellowPagesAddress(createYellowPagesAddressInput: CreateYellowPagesAddressInput!): YellowPagesAddress!
  createYellowPagesCategory(createYellowPagesCategoryInput: CreateYellowPagesCategoryInput!): YellowPagesCatgory!
  createYellowPagesEmail(createYellowPagesEmailInput: CreateYellowPagesEmailInput!): YellowPagesEmail!
  createYellowPagesPhoneNumber(createYellowPagesPhoneNumberInput: CreateYellowPagesPhoneNumberInput!): YellowPagesPhoneNumber!
  publishYellowPages(id: Int!, publishYellowPagesInput: PublishYellowPagesInput!): YellowPages!
  removeBloodRequest(id: Int!): BloodRequest!
  removeDistrict(id: Int!): District!
  removeNews(id: Int!): News!
  removeNewsCategory(id: Int!): NewsCategory!
  removeNewsComment(id: Int!): NewsComment!
  removeNewsImage(id: Int!): NewsImage!
  removeNewsReply(id: Int!): NewsReply!
  removeNewsTaggit(id: Int!): NewsTaggit!
  removeProvince(id: Int!): Province!
  removePublicToilet(id: Int!): PublicToilet!
  removePublicToiletImage(id: Int!): PublicToiletImage!
  removePublicToiletReview(publicToiletId: Int!): PublicToiletReview!
  removeUserLikesNews(newsId: Int!): UserLikesNews!
  removeUserLikesNewsComment(commentId: Int!): UserLikesNewsComment!
  removeUserLikesNewsReply(replyId: Int!): UserLikesNewsReply!
  removeYellowPages(id: Int!): YellowPages!
  removeYellowPagesAddress(id: Int!): YellowPagesAddress!
  removeYellowPagesCategory(id: Int!): YellowPagesCatgory!
  removeYellowPagesEmail(id: Int!): YellowPagesEmail!
  removeYellowPagesImage(id: Int!): YellowPages!
  removeYellowPagesPhoneNumber(id: Int!): YellowPagesPhoneNumber!
  sendNotification(notificationInput: NotificationInput!): Notification!
  sendNotificationNews(notificationNewsInput: NotificationNewsInput!): Notification!
  updateBloodRequest(id: Int!, updateBloodRequestInput: UpdateBloodRequestInput!): BloodRequest!
  updateDistrict(id: Int!, updateDistrictInput: UpdateDistrictInput!): District!
  updateNews(id: Int!, updateNewsInput: UpdateNewsInput!): News!
  updateNewsCategory(id: Int!, updateNewsCategoryInput: UpdateNewsCategoryInput!): NewsCategory!
  updateNewsComment(id: Int!, updateNewsCommentInput: UpdateNewsCommentInput!): NewsComment!
  updateNewsReply(id: Int!, updateNewsReplyInput: UpdateNewsReplyInput!): NewsReply!
  updateProvince(id: Int!, updateProvinceInput: UpdateProvinceInput!): Province!
  updatePublicToilet(id: Int!, updatePublicToiletInput: UpdatePublicToiletInput!): PublicToilet!
  updatePublicToiletReview(publicToiletId: Int!, updatePublicToiletReviewInput: UpdatePublicToiletReviewInput!): PublicToiletReview!
  updateUserLikesNewsComment(commentId: Int!, updateUserLikesNewsCommentInput: UpdateUserLikesNewsCommentInput!): UserLikesNewsComment!
  updateUserLikesNewsReply(replyId: Int!, updateUserLikesNewsReplyInput: UpdateUserLikesNewsReplyInput!): UserLikesNewsReply!
  updateYellowPages(id: Int!, updateYellowPagesInput: UpdateYellowPagesInput!): YellowPages!
  updateYellowPagesAddress(id: Int!, updateYellowPagesAddressInput: UpdateYellowPagesAddressInput!): YellowPagesAddress!
  updateYellowPagesCategory(id: Int!, updateYellowPagesCategoryInput: UpdateYellowPagesCategoryInput!): YellowPagesCatgory!
  updateYellowPagesEmail(id: Int!, updateYellowPagesEmailInput: UpdateYellowPagesEmailInput!): YellowPagesEmail!
  updateYellowPagesPhoneNumber(id: Int!, updateYellowPagesPhoneNumberInput: UpdateYellowPagesPhoneNumberInput!): YellowPagesPhoneNumber!
}

type News {
  """News category"""
  category: NewsCategory
  commentCount: Int!

  """News content"""
  content: String!

  """News createdAt"""
  createdAt: DateTime!

  """News createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """News image"""
  images: [NewsImage!]

  """News Image source"""
  imgSource: String

  """News language"""
  language: NewsLanguage!

  """React of user to the news"""
  like: UserLikesNews
  likeCount: Int!

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean!

  """News publishedAt"""
  publishedAt: DateTime

  """News main image."""
  singleImage: String

  """News source"""
  source: String

  """News state"""
  state: NewsState!

  """News tags"""
  tags: [NewsTaggit!]

  """News title"""
  title: String!

  """News updatedAt"""
  updatedAt: DateTime!

  """News updatedBy"""
  updatedBy: Int!
}

type NewsCategory {
  """date of creation"""
  createdAt: DateTime!

  """one who created"""
  createdBy: Int!

  """News category description"""
  description: String

  """id field for int"""
  id: Int!

  """News category name"""
  name: String!

  """News in this category"""
  news: [News!]!

  """date of update"""
  updatedAt: DateTime!

  """one who updated"""
  updatedBy: Int!
}

type NewsComment {
  """one wrote the comment"""
  author: Int!
  authorDetail: Author!

  """Comment content"""
  content: String!

  """date of creation"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Reaction of the user to this comment"""
  like: UserLikesNewsComment
  likeCount: Int!
  reactCounts: ReactCount!

  """Replies to this comment"""
  replies: [NewsReply!]!

  """Number of replies"""
  replyCount: Int!

  """date of update"""
  updatedAt: DateTime!
}

type NewsCommentConnection {
  edges: [NewsCommentEdge!]!
  pageInfo: NewsCommentPageInfo!
}

type NewsCommentEdge {
  cursor: String
  node: NewsComment
}

type NewsCommentPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsConnection {
  edges: [NewsEdge!]!
  pageInfo: NewsPageInfo!
}

type NewsEdge {
  cursor: String
  node: News
}

type NewsImage {
  """News image createdAt"""
  createdAt: DateTime!

  """News image createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """News image"""
  imageURL: String!
  news: News!

  """News image updatedAt"""
  updatedAt: DateTime!

  """News image updatedBy"""
  updatedBy: Int!
}

enum NewsLanguage {
  ENGLISH
  NEPALI
}

type NewsPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsReply {
  """one wrote the comment"""
  author: Int!
  authorDetail: Author!

  """Comment content"""
  content: String!

  """date of creation"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Reaction of the user to this comment"""
  like: UserLikesNewsReply
  likeCount: Int!
  reactCounts: ReactCount!

  """User who is replied to"""
  repliedTo: Int!
  repliedToDetail: Author!

  """date of update"""
  updatedAt: DateTime!
}

type NewsReplyConnection {
  edges: [NewsReplyEdge!]!
  pageInfo: NewsReplyPageInfo!
}

type NewsReplyEdge {
  cursor: String
  node: NewsReply
}

type NewsReplyPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NewsResponse {
  page: NewsConnection!
  pageData: PageData
}

enum NewsState {
  DRAFT
  PUBLISHED
  REVIEWED
}

type NewsTaggit {
  """id field for int"""
  id: Int!

  """news name"""
  news: News!

  """Tag name"""
  tag: Tag!
}

type Notification {
  """Notification body"""
  body: String!

  """Created at"""
  createdAt: DateTime!

  """Notification data"""
  data: String

  """Notification from User"""
  fromUserId: Int

  """id field for int"""
  id: Int!

  """Notification image"""
  image: String

  """Notification title"""
  title: String!

  """Notification to User"""
  toUserId: Int
}

type NotificationConnection {
  edges: [NotificationEdge!]!
  pageInfo: NotificationPageInfo!
}

type NotificationDevice {
  """Created at"""
  createdAt: DateTime!

  """id field for int"""
  id: Int!

  """Notification device platform"""
  platform: String!

  """Notification device token"""
  token: String!

  """Updated at"""
  updatedAt: DateTime!

  """Notification device User"""
  userId: Int
}

type NotificationEdge {
  cursor: String
  node: Notification
}

input NotificationInput {
  """Notification body"""
  body: String!

  """Notification data"""
  data: String

  """Notification image"""
  image: String

  """Notification title"""
  title: String!
}

input NotificationNewsInput {
  """News Id"""
  newsId: Int!
}

type NotificationPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type NotificationResponse {
  page: NotificationConnection!
  pageData: PageData
}

type PageData {
  """total number of objects"""
  count: Int!

  """current date time"""
  curTime: DateTime!

  """limit of pages"""
  limit: Int!

  """offset of pages"""
  offset: Int!
}

"""Profile of the user"""
type Profile {
  """Age of the user"""
  age: Int!

  """User Blood Group"""
  bloodGroup: String

  """Has user approved for blood donation or not"""
  bloodGroupApproval: Boolean!

  """Date of birth of the user"""
  dateOfBirth: String

  """Profile id"""
  id: Int!

  """Url of the profile picture"""
  image: String
  totalAccepted: Int
  totalDonation: Int
}

type Province {
  """Province Districts"""
  district: [District!]!

  """id field for int"""
  id: Int!

  """Province name"""
  name: String!

  """Addresses for this province"""
  yellowpagesaddress: [YellowPagesAddress!]!
}

type PublicToilet {
  """Public Toilet Address"""
  address: String!

  """Public Toilet content"""
  content: String!

  """Public Toilet createdAt"""
  createdAt: DateTime!

  """Public Toilet createdBy"""
  createdBy: Int!

  """Public Toilet Location"""
  geopoint: GeoJSONPointScalar!

  """id field for int"""
  id: Int!

  """Public Toilet image"""
  images: [PublicToiletImage!]

  """Public Toilet name"""
  name: String!

  """Public Toilet publishedAt"""
  publishedAt: DateTime

  """Public Toilet Review"""
  review: [PublicToiletReview!]

  """Public Toilet main image."""
  singleImage: String

  """Public Toilet state"""
  state: State!

  """Total Review Rating"""
  totalReviewRating: TotalReviewRatings

  """Public Toilet updatedAt"""
  updatedAt: DateTime!

  """Public Toilet updatedBy"""
  updatedBy: Int!
}

type PublicToiletAdminResponse {
  count: Int!
  data: [PublicToilet!]!
}

type PublicToiletConnection {
  edges: [PublicToiletEdge!]!
  pageInfo: PublicToiletPageInfo!
}

type PublicToiletEdge {
  cursor: String
  node: PublicToilet
}

type PublicToiletImage {
  """News image createdAt"""
  createdAt: DateTime!

  """News image createdBy"""
  createdBy: Int!

  """id field for int"""
  id: Int!

  """Public Toilet image"""
  image: String!

  """News image updatedAt"""
  updatedAt: DateTime!

  """News image updatedBy"""
  updatedBy: Int!
}

type PublicToiletPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PublicToiletResponse {
  page: PublicToiletConnection!
  pageData: PageData
}

type PublicToiletReview {
  """one wrote the review"""
  author: Int!
  authorDetail: Author!

  """Review content"""
  content: String!

  """date of creation"""
  createdAt: DateTime!
  publicToiletId: Int!

  """Review rating"""
  rating: Int!

  """date of update"""
  updatedAt: DateTime!
}

type PublicToiletReviewConnection {
  edges: [PublicToiletReviewEdge!]!
  pageInfo: PublicToiletReviewPageInfo!
}

type PublicToiletReviewEdge {
  cursor: String
  node: PublicToiletReview
}

type PublicToiletReviewPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PublicToiletReviewsResponse {
  page: PublicToiletReviewConnection!
  pageData: PageData
}

input PublishYellowPagesInput {
  state: State!
}

type Query {
  bloodRequestById(id: Int!): BloodRequest!
  bloodRequests(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterBloodRequestInput: FilterBloodRequestInput

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): BloodRequestResponse!
  bloodRequestsAdmin(skip: Int = 0, take: Int = 25): BloodRequestAdminResponse!
  districts(filterDistrictInput: FilterDistrictInput): [District!]!
  getAcceptors(id: Int!): [Acceptors!]!
  getAllDoners(skip: Int = 0, take: Int = 25): BloodBankDonerListResponse!
  getBloodRecords: BloodRecordResponse!
  getDonorsOfBloodRequest(id: Int!): [Acceptors!]!
  instrestingTags: [Tag!]!
  mybloodRequests: [BloodRequest!]! @deprecated(reason: "This endpoint has no support for pagination. Please migrate to new endpoint mybloodRequestV2")
  mybloodRequestsV2(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): BloodRequestResponse!
  news(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterNewsInput: FilterNewsInput

    """Paginate first"""
    first: Float
    getRecommended: Boolean = false

    """Paginate last"""
    last: Float
  ): NewsResponse!
  newsAdmin(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterNewsInput: FilterNewsInput

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): NewsResponse!
  newsById(id: Int!): News!
  newsCategories: [NewsCategory!]!
  newsCategoryById(id: Int!): NewsCategory!
  newsComment(id: Int!): NewsComment!
  newsComments(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    newsId: Int!
  ): CommentsResponse!
  newsReplies(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    newsCommentId: Int!
  ): RepliesResponse!
  newsTaggit: [NewsTaggit!]!
  notificationAll(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): NotificationResponse!
  notificationUser(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): NotificationResponse!
  provinceById(id: Int!): Province!
  provinces: [Province!]!
  publicToiletById(id: Int!): PublicToilet!
  publicToiletNearMe(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    origin: GeoJSONPointScalar!
  ): PublicToiletResponse!
  publicToiletReview(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
    publicToiletId: Int!
  ): PublicToiletReviewsResponse!
  publicToiletReviewUser(publicToiletId: Int!): PublicToiletReview
  publicToilets(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): PublicToiletResponse!
  publicToiletsAdmin(skip: Int = 0, take: Int = 25): PublicToiletAdminResponse!
  recommendationDataExists: Boolean!
  tags: [Tag!]!
  userInterests: [UserInterests!]!
  userNewsEngagements: [UserNewsEngagement!]!
  yellowPages(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String
    filterYellowPagesInput: FilterYellowPagesInput

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): YellowPagesResponse!
  yellowPagesAddress: [YellowPagesAddress!]!
  yellowPagesAddressById(id: Int!): YellowPagesAddress!
  yellowPagesAdmin(filterYellowPagesInput: FilterYellowPagesInput, skip: Int = 0, take: Int = 25): YellowPagesAdminResponse!
  yellowPagesById(id: Int!): YellowPages!
  yellowPagesCategories(
    """Paginate after cursor"""
    after: String

    """Paginate before cursor"""
    before: String

    """Paginate first"""
    first: Float

    """Paginate last"""
    last: Float
  ): YellowPagesCategoryResponse!
  yellowPagesCategoryAdmin(skip: Int = 0, take: Int = 25): [YellowPagesCatgory!]!
  yellowPagesCategoryById(id: Int!): YellowPagesCatgory!
  yellowPagesEmail: [YellowPagesEmail!]!
  yellowPagesEmailById(id: Int!): YellowPagesEmail!
  yellowPagesPhoneNumber: [YellowPagesPhoneNumber!]!
  yellowPagesPhoneNumberById(id: Int!): YellowPagesPhoneNumber!
}

type ReactCount {
  """Number of angry reacts"""
  angry: Int!

  """Number of hahas reacts"""
  haha: Int!

  """Number of love reacts"""
  love: Int!

  """Number of sad reacts"""
  sad: Int!

  """Number of wow reacts"""
  wow: Int!
}

type RepliesResponse {
  page: NewsReplyConnection!
  pageData: PageData
}

enum State {
  DRAFT
  PUBLISHED
  REVIEWED
}

type Tag {
  """id field for int"""
  id: Int!

  """name of the tag"""
  name: String!
}

"""Total Reveiw and Rating"""
type TotalReviewRatings {
  """Total Rating"""
  totalRating: Float!

  """Total Reviewer"""
  totalReview: Int!
}

input UpdateBloodRequestInput {
  acceptors: [Int!]

  """Address for yellow page address"""
  address: CreateBloodRequestAddressInput

  """Amount of blood"""
  amount: Int

  """Blood group type"""
  bloodGroup: BloodGroup

  """Description for blood request"""
  description: String

  """Donation date"""
  donationDate: DateTime
  doners: [Int!]

  """Is the blood request an emergency?"""
  is_emergency: Boolean = false

  """Phone number"""
  phoneNumber: BigInt

  """Yellow Pages State"""
  state: BloodRequestState
}

input UpdateDistrictInput {
  """District name"""
  name: String

  """Districts Province"""
  province: Int
}

input UpdateNewsCategoryInput {
  """News category description"""
  description: String

  """News category name"""
  name: String
}

input UpdateNewsCommentInput {
  """Comment content"""
  content: String!
}

input UpdateNewsInput {
  """News category"""
  category: Int

  """News content"""
  content: String

  """News image"""
  images: [Upload!]

  """News Image source"""
  imgSource: String

  """News Language"""
  language: NewsLanguage

  """News link"""
  link: String

  """Is news pinned?"""
  pinned: Boolean
  singleImage: Upload

  """News source"""
  source: String

  """News Status"""
  state: NewsState

  """News tags"""
  tags: [String!]

  """News title"""
  title: String
}

input UpdateNewsReplyInput {
  """Comment content"""
  content: String!
}

input UpdateProvinceInput {
  name: String
}

input UpdatePublicToiletInput {
  """Public Toilet address"""
  address: String

  """Public Toilet content"""
  content: String

  """Public Toilet location"""
  geopoint: GeoJSONPointScalar

  """Public Toilet image"""
  images: [Upload!]

  """PublicToilet name"""
  name: String

  """Public Toilet Feature Image"""
  singleImage: Upload

  """Public Toilet State"""
  state: State
}

input UpdatePublicToiletReviewInput {
  """Review content"""
  content: String!

  """Review rating"""
  rating: Int!
}

input UpdateUserLikesNewsCommentInput {
  """User reaction to comment"""
  react: UserReacts
}

input UpdateUserLikesNewsReplyInput {
  """User reaction to reply"""
  react: UserReacts
}

input UpdateYellowPagesAddressInput {
  """Address"""
  address: String

  """District Type"""
  district: Int

  """Province Type"""
  province: Int

  """Yellow pages id"""
  yellowpages: Int
}

input UpdateYellowPagesCategoryInput {
  """Yellow Pages Category description"""
  description: String

  """Yellow Pages name"""
  name: String
}

input UpdateYellowPagesEmailInput {
  """Email"""
  email: EmailAddress

  """Yellow pages id"""
  yellowpages: Int
}

input UpdateYellowPagesInput {
  """Address for yellow page address"""
  address: [CreateYellowPagesAddressInput!]

  """Yellow Pages category"""
  category: Int

  """Yellow Pages description"""
  description: String

  """email for yellow pages"""
  email: [CreateYellowPagesEmailInput!]

  """Yellow Pages name"""
  name: String

  """Phone number for yellow pages"""
  phone_number: [CreateYellowPagesPhoneNumberInput!]
  singleImage: Upload

  """Yellow Pages State"""
  state: State
}

input UpdateYellowPagesPhoneNumberInput {
  """Emergency number if set to true"""
  is_emergency: Boolean = false

  """Phone number"""
  phone_number: BigInt

  """Yellow pages id"""
  yellowpages: Int
}

"""Upload files"""
scalar Upload

"""Address of the user"""
type UserAddress {
  district: String!
  province: String!
}

type UserInterests {
  """News categories of interest to user"""
  newsCategories: [NewsCategory!]

  """News tags of interest to user"""
  newsTags: [Tag!]

  """id field for user"""
  userId: Int!
}

type UserLikesNews {
  """likes for the news"""
  news: News!

  """id field for int"""
  userId: Int!
}

type UserLikesNewsComment {
  """User reacts"""
  react: UserReacts!

  """id field for int"""
  userId: Int!
}

type UserLikesNewsReply {
  """User reacts"""
  react: UserReacts!

  """id field for int"""
  userId: Int!
}

type UserNewsEngagement {
  """Engagement duration in seconds"""
  engagementDuration: String

  """Engagement date"""
  engagmentDate: DateTime!

  """news user is engaged to"""
  news: News!

  """id field for user"""
  userId: Int!
}

enum UserReacts {
  ANGRY
  HAHA
  LOVE
  SAD
  WOW
}

type YellowPages {
  """Yellow Pages address(s)"""
  address: [YellowPagesAddress!]

  """Yellow Pages category"""
  category: YellowPagesCatgory

  """date of creation"""
  createdAt: DateTime!

  """one who created"""
  createdBy: Int!

  """Yellow Pages description"""
  description: String

  """Yellow Pages email(s)"""
  email: [YellowPagesEmail!]

  """id field for int"""
  id: Int!

  """Yellow Pages name"""
  name: String!

  """Yellow Pages phone number(s)"""
  phone_number: [YellowPagesPhoneNumber!]

  """Yellow Pages publishedAt"""
  publishedAt: DateTime

  """Yellow Pages main image"""
  singleImage: String

  """Yellow Pages state"""
  state: State!

  """date of update"""
  updatedAt: DateTime!

  """one who updated"""
  updatedBy: Int!
}

type YellowPagesAddress {
  """Address"""
  address: String!

  """District Type"""
  district: District

  """id field for int"""
  id: Int!

  """Province Type"""
  province: Province

  """"""
  yellowpages: YellowPages!
}

type YellowPagesAdminResponse {
  count: Int!
  data: [YellowPages!]!
}

type YellowPagesCategoryResponse {
  page: YellowPagesCatgoryConnection!
  pageData: PageData
}

type YellowPagesCatgory {
  """date of creation"""
  createdAt: DateTime!

  """one who created"""
  createdBy: Int!

  """Yellow Pages description"""
  description: String

  """id field for int"""
  id: Int!

  """Yellow Pages name"""
  name: String!

  """date of update"""
  updatedAt: DateTime!

  """one who updated"""
  updatedBy: Int!

  """Yellow Pages in this category"""
  yellowpages: [YellowPages!]
}

type YellowPagesCatgoryConnection {
  edges: [YellowPagesCatgoryEdge!]!
  pageInfo: YellowPagesCatgoryPageInfo!
}

type YellowPagesCatgoryEdge {
  cursor: String
  node: YellowPagesCatgory
}

type YellowPagesCatgoryPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type YellowPagesConnection {
  edges: [YellowPagesEdge!]!
  pageInfo: YellowPagesPageInfo!
}

type YellowPagesEdge {
  cursor: String
  node: YellowPages
}

type YellowPagesEmail {
  """Email"""
  email: EmailAddress!

  """id field for int"""
  id: Int!

  """"""
  yellowpages: YellowPages!
}

type YellowPagesPageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type YellowPagesPhoneNumber {
  """id field for int"""
  id: Int!

  """"""
  is_emergency: Boolean!

  """Phone number"""
  phone_number: BigInt!

  """"""
  yellowpages: YellowPages!
}

type YellowPagesResponse {
  page: YellowPagesConnection!
  pageData: PageData
}